version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: elasticsearch1
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 4
    restart: always
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - discovery.type=single-node
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
    ports:
      - 9200:9200
  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    container_name: logstash
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    restart: always
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
      - "PIPELINE_WORKERS=4"
      - xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200
    volumes:
      - ${PWD}/logstash/config/logstash-small.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elastic
    ports:
     - 514:5014/udp
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    container_name: kibana
    restart: always
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    volumes:
      - type: volume
        source: logs
        target: /var/log
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 512m
        reservations:
          cpus: '1'
          memory: 512m
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - elastic
  run-script:
    image: bash:latest
    restart: on-failure
    volumes:
     - ${PWD}/script-small.sh:/script.sh
     - ${PWD}/index_template.cfg:/index_template.cfg
     - ${PWD}/wait_for_es.sh:/wait_for_es.sh
    command: [bash,"./wait_for_es.sh","http://127.0.0.1:9200","--",bash,"./script.sh"]
    ulimits:
      nproc: 65535
    depends_on:
      - elasticsearch
      - logstash
      - kibana
    networks:
      - elastic
           
volumes:
  esdata1:
  logs:
networks:
  elastic:

# configs:
#   auditbeat_config:
#     file: configs/auditbeat.docker.yml
#   filebeat_config:
#     file: configs/filebeat.docker.yml
#   heartbeat_config:
#     file: configs/heartbeat.docker.yml
#   metricbeat_config:
#     file: configs/metricbeat.docker.yml
#   packetbeat_config:
#     file: configs/packetbeat.docker.yml
